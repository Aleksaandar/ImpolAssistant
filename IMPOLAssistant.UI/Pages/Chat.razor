@page "/"

@using IMPOLAssistant.Shared.Models
@using MudBlazor
@inject IJSRuntime JS
@inject HttpClient Http


<MudContainer>
    <MudPaper Style="outline: none; background-color: transparent; border: none; box-shadow: none;">
        <div class="flex-container" >
        <MudText Typo="Typo.h5" >IMPOL Asistent Chat</MudText>
            <img src="images/impol-seval.jpg" alt="Description of the image" class="side-image" />

            
        </div>
        <p> <h5>Zdravo! Kako mogu da vam pomognem danas?</h5></p>
       

       
    </MudPaper>
   
  
    <MudPaper Class="chat-history" id="chatHistory" Style="outline: none; background-color: transparent; border: none; box-shadow: none;">

        <div class="message-container"  >
        @foreach (var message in messages)
        {
                <div class="message-box" >
                    <MudText Typo="Typo.body1">@message.Content (@message.Timestamp)</MudText>
                </div>
        }
        </div>
    </MudPaper>

    <MudContainer Class="chat-input">
        <MudSelect Dense="true" T="string" Label="Odaberi tip Asistenta" Variant="Variant.Outlined" @bind-Value="SelectedOption">
            <MudSelectItem Value="@("Tekstualni Asistent")" />
            <MudSelectItem Value="@("Asistent za Legure")" />
           
        </MudSelect>
        
        <MudTextField T="string" Label="Unesite pitanje ovde:" Variant="Variant.Text" AutoGrow  @bind-Value="userInput" />
        <MudButton OnClick="SendMessage"  Class="custom-button">Pošalji</MudButton>
      
    </MudContainer>

</MudContainer>

@code {
    private string userInput;
    private string SelectedOption = "Tekstualni Asistent";

    private List<Message> messages = new List<Message>
    {

    };


    private async Task SendMessage()
    {
        if (!string.IsNullOrEmpty(userInput))
        {
            HttpResponseMessage response = null;
            var userMessage = new Message { Content = userInput, Timestamp = DateTime.Now };
            if (SelectedOption == "Tekstualni Asistent")
            {
                response = await Http.PostAsJsonAsync("https://localhost:7202/api/Chat/send", userMessage);
            }
            else if (SelectedOption == "Asistent za Legure")
            {
                response = await Http.PostAsJsonAsync("https://localhost:7202/api/Chat/send-legura", userMessage);
            }
           
            if (response != null && response.IsSuccessStatusCode)
            {
                var responseStream = await response.Content.ReadFromJsonAsync<IAsyncEnumerable<Message>>();
                await foreach (var message in responseStream)
                {
                    messages.Add(message);
                }
                await JS.InvokeVoidAsync("scrollPageToBottom");
                userInput = string.Empty;
            }
         
        }

    }
  

}
<style>
    .flex-container{
        margin-left:-10rem;  
        
    }
 
     .chat-history {
         height:100%;
       outline:n;
         padding: 16px;
         background-color: #f9f9f9;
         display: flex;
         flex-direction: column;
         justify-content: center;
         align-items: center;
         overflow-y: auto;
         margin-bottom: 150px;
     }
     h5{
         margin-top:0.5rem;
         margin-left:-10rem;
     }

     .chat-input {
         position: fixed;
         bottom:2rem;
         left: 18%;
         right: 0;
         display: flex;
         justify-content: center;
         align-items: center;
         padding: 8px;
         background-color: #f0f0f0;
         border-radius: 24px;
         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
         max-width: 30%;
         margin-top:4rem;
        
     }

     .message-container {
        
         width: 50%;
         display: flex;
         flex-direction: column;
         justify-content: center;
         align-items: center;
         overflow-y: auto;
     }

     .message {
      
         margin: 8px 0;
         background-color: #e0e0e0;
         padding: 8px 16px;
         border-radius: 12px;
         max-width: 80%;
         text-align: center;
     }

     .custom-input {
        
         flex-grow: 1;
         margin-right: 8px;
         border: none;
         padding: 12px;
         border-radius: 24px;
        height:100px;
         box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
     }

         .custom-input input {
             border: none !important;
             outline: none !important;
             box-shadow: none !important;
             padding: 0 !important;
             width:500px;
             background-color: transparent !important;
         }

     .custom-button {
         padding: 12px 20px;
         border-radius: 24px;
         border: none;
         background-color: #007bff;
         color: white;
         cursor: pointer;
         transition: background-color 0.3s ease;
     }

         .custom-button:hover {
             background-color: #0056b3;
         }

         .custom-button:focus {
             outline: none;
             box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
         }

     .flex-container {
         display: flex;
         align-items: center; 
     }

     .side-image {
         margin-left: 10px; 
         max-width: 100px;
         height:auto;
     }

     .message-box {

         background-color: #ffffff;
         border: 1px solid #e0e0e0;
         border-radius: 8px;
         padding: 12px;
         margin: 8px 0;
         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
         max-width: 80%;
         word-wrap: break-word;
       
     }

         .message-box .mud-text {
             margin: 0;
         }
         .mud-select{
             margin-left:-15rem;
         }

 

    

</style>
